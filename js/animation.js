// Generated by CoffeeScript 1.8.0
(function() {
  var animate, camera, checkclick, checkhighlight, curtrx, curtry, curtrz, flag, init, initrx, initry, initrz, mirror, mirrorlist, mouseX, mouseY, newmirror, onDocumentMouseMove, render, renderer, rotate, scene, update;

  scene = new THREE.Scene();

  scene.fog = new THREE.FogExp2(0x000000, 0.002);

  camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);

  renderer = new THREE.WebGLRenderer();

  mirrorlist = [];

  initrx = 0.01;

  initry = 0.01;

  initrz = 0.01;

  curtrx = initrx;

  curtry = initry;

  curtrz = initrz;

  mouseX = 0;

  mouseY = 0;

  flag = 0;

  init = function() {
    var light, x, _i;
    renderer.setSize(window.innerWidth, window.innerHeight);
    $("body").append(renderer.domElement);
    camera.position.z = 5;
    for (x = _i = 1; _i <= 30; x = ++_i) {
      newmirror();
    }
    light = new THREE.DirectionalLight(0x7777ff);
    light.position.set(1, 1, 1);
    scene.add(light);
    light = new THREE.DirectionalLight(0xaaaaff);
    light.position.set(-1, -1, -1);
    scene.add(light);
    return document.addEventListener('mousemove', onDocumentMouseMove, false);
  };

  onDocumentMouseMove = function(event) {
    mouseX = event.clientX - window.innerWidth / 2;
    mouseY = event.cliendY - window.innerHeight / 2;
    console.log(camera);
    console.log(camera);
  };

  mirror = function(mesh, pst, rtt) {
    this.mesh = mesh;
    this.pst = pst;
    this.rtt = rtt;
    return this;
  };

  newmirror = function() {
    var cube, facemat, geometry, geometry2, mirror1, pst1, puremat, rtt1, wirecube, wiremat;
    geometry = new THREE.SphereGeometry(1, 1, 1);
    geometry2 = new THREE.CylinderGeometry(0, 1, 3, 4, 1);
    wiremat = new THREE.MeshLambertMaterial({
      color: 0xeeeeee,
      shading: THREE.FlatShading
    });
    facemat = new THREE.MeshBasicMaterial({
      color: 0x111111,
      shading: THREE.FlatShading
    });
    puremat = new THREE.MeshPhongMaterial({
      color: 0x993321
    });
    wirecube = new THREE.Mesh(geometry, wiremat);
    cube = wirecube;
    pst1 = {
      x: Math.random() * 25. - 10,
      y: Math.random() * 10. - 5,
      z: Math.random() * 5. - 10
    };
    rtt1 = {
      x: (Math.random() - 0.5) / 40 + 0.003,
      y: (Math.random() - 0.5) / 40 + 0.003,
      z: (Math.random() - 0.5) / 40 + 0.003
    };
    mirror1 = new mirror(cube, pst1, rtt1);
    mirror1.mesh.position.x = mirror1.pst.x;
    mirror1.mesh.position.y = mirror1.pst.y;
    mirror1.mesh.position.z = mirror1.pst.z;
    scene.add(mirror1.mesh);
    return mirrorlist.push(mirror1);
  };

  rotate = function(mirror) {
    mirror.mesh.rotation.x += mirror.rtt.x;
    mirror.mesh.rotation.y += mirror.rtt.y;
    mirror.mesh.rotation.z += mirror.rtt.z;
    return this;
  };

  checkhighlight = function() {};

  checkclick = function() {};

  animate = function() {
    requestAnimationFrame(animate);
    render();
    return update();
  };

  update = function() {
    var mirrors, _i, _len, _results;
    checkhighlight();
    checkclick();
    camera.position.x += (mouseX - camera.position.x) * 0.001;
    _results = [];
    for (_i = 0, _len = mirrorlist.length; _i < _len; _i++) {
      mirrors = mirrorlist[_i];
      _results.push(rotate(mirrors));
    }
    return _results;
  };

  render = function() {
    return renderer.render(scene, camera);
  };

  init();

  animate();

}).call(this);
